{"ast":null,"code":"import EmployeeService from '@/services/EmployeeService';\nexport default {\n  name: \"EmployeePage\",\n  props: {\n    id: String\n  },\n  data() {\n    return {\n      employeeID: String,\n      name: String,\n      email: String,\n      department: String,\n      isAdmin: Boolean\n    };\n  },\n  created() {\n    this.employeeID = this.id;\n    EmployeeService.getAllEmployees()(employees => {\n      employees.forEach(e => {\n        if (e.employee_id == this.id) {\n          this.name = e.name;\n          this.email = e.email;\n          this.department = e.department;\n          this.isAdmin = e.isAdmin == \"yes\" ? true : false;\n        }\n      });\n    });\n  }\n};","map":{"version":3,"mappings":"AAOA,OAAOA,eAAc,MAAO,4BAA4B;AAExD,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACLC,EAAE,EAAEC;EACN,CAAC;EACDC,IAAI,GAAG;IACL,OAAO;MACLC,UAAU,EAAEF,MAAM;MAClBH,IAAI,EAAEG,MAAM;MACZG,KAAK,EAAEH,MAAM;MACbI,UAAU,EAAEJ,MAAM;MAClBK,OAAO,EAAEC;IACX,CAAC;EACH,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAACL,UAAS,GAAI,IAAI,CAACH,EAAE;IAEzBH,eAAe,CAACY,eAAe,EAAE,CAAEC,SAAS,IAAK;MAC/CA,SAAS,CAACC,OAAO,CAAEC,CAAC,IAAK;QACvB,IAAIA,CAAC,CAACC,WAAU,IAAK,IAAI,CAACb,EAAE,EAAE;UAC5B,IAAI,CAACF,IAAG,GAAIc,CAAC,CAACd,IAAI;UAClB,IAAI,CAACM,KAAI,GAAIQ,CAAC,CAACR,KAAK;UACpB,IAAI,CAACC,UAAS,GAAIO,CAAC,CAACP,UAAU;UAC9B,IAAI,CAACC,OAAM,GAAIM,CAAC,CAACN,OAAM,IAAK,KAAI,GAAI,IAAG,GAAI,KAAK;QAClD;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;AACF,CAAC","names":["EmployeeService","name","props","id","String","data","employeeID","email","department","isAdmin","Boolean","created","getAllEmployees","employees","forEach","e","employee_id"],"sourceRoot":"","sources":["/Users/kyleloudin/guardians-web-site/src/components/EmployeePage.vue"],"sourcesContent":["<template>\n  <div>\n    <h2 class=\"name\">Name: {{ name }}</h2>\n  </div>\n</template>\n\n<script>\nimport EmployeeService from '@/services/EmployeeService';\n\nexport default {\n  name: \"EmployeePage\",\n  props: {\n    id: String,\n  },\n  data() {\n    return {\n      employeeID: String,\n      name: String,\n      email: String,\n      department: String,\n      isAdmin: Boolean,\n    };\n  },\n  created() {\n    this.employeeID = this.id;\n\n    EmployeeService.getAllEmployees()((employees) => {\n      employees.forEach((e) => {\n        if (e.employee_id == this.id) {\n          this.name = e.name;\n          this.email = e.email;\n          this.department = e.department;\n          this.isAdmin = e.isAdmin == \"yes\" ? true : false;\n        }\n      });\n    });\n  },\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}