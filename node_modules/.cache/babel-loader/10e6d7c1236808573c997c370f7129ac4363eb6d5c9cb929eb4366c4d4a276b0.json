{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TicketRequests = _resolveComponent(\"TicketRequests\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, [_hoisted_2, _createTextVNode(\" \" + _toDisplayString($data.name) + \" \", 1 /* TEXT */), _hoisted_3, _hoisted_4])]), _createVNode(_component_TicketRequests, {\n    id: $props.id\n  }, null, 8 /* PROPS */, [\"id\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAM;gCACXC,oBAAI;gCAAiBA,oBAAI;gCAAAA,oBAAI;;;;6DADnCA,oBAEI,OAFJC,UAEI,GADFD,oBAAsC,aAAlCE,UAAI,sBAAI,oBAAGC,UAAI,IAAG,GAAG,2BAAI,YAAI,MAEnCC,aAA0BC;IAATC,EAAE,EAAEC;EAAE","names":["class","_createElementVNode","_hoisted_1","_hoisted_2","$data","_createVNode","_component_TicketRequests","id","$props"],"sourceRoot":"","sources":["/Users/kyleloudin/Desktop/Guardians Challenge Submission/Website/guardians-web-site/src/components/EmployeePage.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <h2><br>    {{ name }}   <br><br></h2>\n</div>\n  <TicketRequests :id=\"id\"/>\n</template>\n\n<script>\nimport EmployeeService from '@/services/EmployeeService';\nimport TicketRequests from './TicketRequests.vue';\n\nexport default {\n  components: {\n    TicketRequests\n  },\n  name: \"EmployeePage\",\n  props: {\n    id: String,\n  },\n  data() {\n    return {\n      employeeID: String,\n      name: 'Name',\n      email: String,\n      department: String,\n      isAdmin: Boolean,\n    };\n  },\n  created() {\n    this.employeeID = this.id;\n\n    EmployeeService.getAllEmployees().forEach((e) => {\n        if (e.employee_id == this.id) {\n          this.name = e.name;\n          this.email = e.email;\n          this.department = e.department;\n          this.isAdmin = e.isAdmin == \"yes\" ? true : false;\n        }\n      });\n  },\n};\n</script>\n\n<style>\n\n/* Card style credit to bootstrap */\n\n.card {\n  width: 254px;\n  height: 254px;\n  background: #07182E;\n  position: relative;\n  display: flex;\n  place-content: center;\n  place-items: center;\n  overflow: hidden;\n  border-radius: 20px;\n  padding\n}\n\n.card h2 {\n  z-index: 1;\n  color: white;\n  font-size: 2em;\n  flex-wrap: wrap;\n}\n\n.card::before {\n  content: '';\n  position: absolute;\n  width: 100px;\n  background-image: linear-gradient(180deg, rgb(0, 183, 255), rgb(255, 48, 255));\n  height: 130%;\n  animation: rotBGimg 3s linear infinite;\n  transition: all 0.2s linear;\n}\n\n@keyframes rotBGimg {\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.card::after {\n  content: '';\n  position: absolute;\n  background: #07182E;\n  ;\n  inset: 5px;\n  border-radius: 15px;\n}  \n/* .card:hover:before {\n  background-image: linear-gradient(180deg, rgb(81, 255, 0), purple);\n  animation: rotBGimg 3.5s linear infinite;\n} */\n\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}